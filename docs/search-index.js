var searchIndex = new Map(JSON.parse('[\
["e_cli",{"doc":"E-Cli","t":"CCCHCFPGPPPPONNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNOOOOOOOOHHHHHHHHHCFFFFFFFOONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOONNNNNNNOOOONNNNNNNONNNNNNNNNNNNNNNNNNNNNOOO","n":["cli","commands","funcs","main","type_defs","Args","ClearDl","Commands","DownloadFavourites","DownloadPost","DownloadPosts","GetPages","api_source","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","eq","equivalent","equivalent","equivalent","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","lower_quality","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","count","count","file_path","post_id","random","tags","tags","username","download_favourites","download_post","download_posts_from_file","fetch_posts","create_dl_dir","debug_response_file","download","lower_quality_dl","parse_artists","api_defs","Alternates","File","LowerQuality","Post","Posts","Sample","Tags","alternates","artist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","ext","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","has","id","into","into","into","into","into","into","into","lower_quality","media_type","posts","sample","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","urls"],"q":[[0,"e_cli"],[5,"e_cli::cli"],[49,"e_cli::cli::Commands"],[57,"e_cli::commands"],[61,"e_cli::funcs"],[66,"e_cli::type_defs"],[67,"e_cli::type_defs::api_defs"],[158,"clap_builder::builder::command"],[159,"clap_builder::parser::matches::arg_matches"],[160,"clap_builder"],[161,"core::result"],[162,"clap_builder::util::id"],[163,"core::option"],[164,"core::any"],[165,"alloc::string"],[166,"serde::de"],[167,"core::fmt"],[168,"core::fmt"]],"d":["The cli definitions using clap derive","The module with all the command functions.","Special functions for the cli that would otherwise be …","Main function, handles the cli arguments.","All Type Definitions the program uses.","The arguments, includes the subcommands from the Commands …","","All the commands the CLI has.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","This function takes the arguments of …","This function takes the arguments of …","This function accepts a file path from the args. Parses …","This function takes tags and the page count and fetches …","Single function to create the ./dl/ dir for all media …","Used for debugging in the get-pages subcommand. It saves …","This function downloads the file with reqwest and returns …","This function uses the download function to download …","This function parses the artists and returns a neatly …","Api definitions for the E api.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,3,0,3,3,3,3,6,6,6,3,3,6,3,6,3,6,6,6,3,3,3,3,6,3,6,3,6,3,6,3,6,3,6,6,3,6,3,6,3,6,3,6,3,28,29,30,31,28,28,29,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,18,19,17,21,18,22,23,24,19,17,21,18,22,23,24,19,17,21,18,22,23,24,21,17,19,17,21,18,22,23,24,19,17,21,18,22,23,24,22,17,19,17,21,18,22,23,24,23,24,19,17,19,17,21,18,22,23,24,17,19,17,21,18,22,23,24,19,17,21,18,22,23,24,19,17,21,18,22,23,24,21,22,24],"f":"```{{}b}`````````{dd}000{ce{}{}}000{{}d}`0{{ff}h}{{ce}h{}{}}00{cc{}}0{j{{A`{ln}}}}{j{{A`{fn}}}}10{{}{{Ad{Ab}}}}{Afh}88`{c{{A`{e}}}{}{}}000{cAh{}}0{{lj}{{A`{bn}}}}{{fj}{{A`{bn}}}}10````````{{AjAlhAjhAj}{{Ad{An}}}}{{B`hAj}{{Ad{An}}}}{{Ajh}{{Ad{An}}}}{{AjAlAj}b}{{}h}{Ajb}{{AjAjB`Aj}An}{{BbAj}An}{BdAj}``````````{ce{}{}}0000000000000{c{{A`{Bf}}}Bh}{c{{A`{Bb}}}Bh}{c{{A`{Bj}}}Bh}{c{{A`{Bd}}}Bh}{c{{A`{Bl}}}Bh}{c{{A`{Bn}}}Bh}{c{{A`{C`}}}Bh}``{{BfCb}Cd}{{BbCb}Cd}{{BjCb}Cd}{{BdCb}Cd}{{BlCb}Cd}{{BnCb}Cd}{{C`Cb}Cd}{cc{}}000000``???????````{{Bfc}A`Cf}{{Bbc}A`Cf}{{Bjc}A`Cf}{{Bdc}A`Cf}{{Blc}A`Cf}{{Bnc}A`Cf}{{C`c}A`Cf}`{c{{A`{e}}}{}{}}0000000000000{cAh{}}000000```","c":[],"p":[[1,"unit"],[5,"Command",158],[6,"Commands",5],[1,"bool"],[5,"ArgMatches",159],[5,"Args",5],[8,"Error",160],[6,"Result",161],[5,"Id",162],[6,"Option",163],[1,"str"],[5,"TypeId",164],[5,"String",165],[1,"u8"],[1,"f64"],[1,"u64"],[5,"Post",67],[5,"Tags",67],[5,"Posts",67],[10,"Deserializer",166],[5,"File",67],[5,"Sample",67],[5,"Alternates",67],[5,"LowerQuality",67],[5,"Formatter",167],[8,"Result",167],[10,"Serializer",168],[15,"DownloadFavourites",49],[15,"GetPages",49],[15,"DownloadPosts",49],[15,"DownloadPost",49]],"b":[]}],\
["e_tools",{"doc":"E-Tools","t":"CCCHCFPGPPPPONNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNOOOOOOOOHHHHHHHHHCFFFFFFFOONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOONNNNNNNOOOONNNNNNNONNNNNNNNNNNNNNNNNNNNNOOO","n":["cli","commands","funcs","main","type_defs","Args","ClearDl","Commands","DownloadFavourites","DownloadPost","DownloadPosts","GetPages","api_source","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","eq","equivalent","equivalent","equivalent","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","lower_quality","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","count","count","file_path","post_id","random","tags","tags","username","download_favourites","download_post","download_posts_from_file","fetch_posts","create_dl_dir","debug_response_file","download","lower_quality_dl","parse_artists","api_defs","Alternates","File","LowerQuality","Post","Posts","Sample","Tags","alternates","artist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","ext","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","has","id","into","into","into","into","into","into","into","lower_quality","media_type","posts","sample","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","urls"],"q":[[0,"e_tools"],[5,"e_tools::cli"],[49,"e_tools::cli::Commands"],[57,"e_tools::commands"],[61,"e_tools::funcs"],[66,"e_tools::type_defs"],[67,"e_tools::type_defs::api_defs"],[158,"clap_builder::builder::command"],[159,"clap_builder::parser::matches::arg_matches"],[160,"clap_builder"],[161,"core::result"],[162,"clap_builder::util::id"],[163,"core::option"],[164,"core::any"],[165,"alloc::string"],[166,"serde::de"],[167,"core::fmt"],[168,"core::fmt"]],"d":["The cli definitions using clap derive","The module with all the command functions.","Special functions for the cli that would otherwise be …","","","The arguments, includes the subcommands from the Commands …","","All the commands the CLI has.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","This function takes the arguments of …","This function takes the arguments of …","This function accepts a file path from the args. Parses …","This function takes tags and the page count and fetches …","Single function to create the ./dl/ dir for all media …","Used for debugging in the get-pages subcommand. It saves …","This function downloads the file with reqwest and returns …","This function uses the download function to download …","This function parses the artists and returns a neatly …","Api definitions for the E api.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,3,0,3,3,3,3,6,6,6,3,3,6,3,6,3,6,6,6,3,3,3,3,6,3,6,3,6,3,6,3,6,3,6,6,3,6,3,6,3,6,3,6,3,28,29,30,31,28,28,29,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,18,19,17,21,18,22,23,24,19,17,21,18,22,23,24,19,17,21,18,22,23,24,21,17,19,17,21,18,22,23,24,19,17,21,18,22,23,24,22,17,19,17,21,18,22,23,24,23,24,19,17,19,17,21,18,22,23,24,17,19,17,21,18,22,23,24,19,17,21,18,22,23,24,19,17,21,18,22,23,24,21,22,24],"f":"```{{}b}`````````{dd}000{ce{}{}}000{{}d}`0{{ff}h}{{ce}h{}{}}00{cc{}}0{j{{A`{ln}}}}{j{{A`{fn}}}}10{{}{{Ad{Ab}}}}{Afh}88`{c{{A`{e}}}{}{}}000{cAh{}}0{{lj}{{A`{bn}}}}{{fj}{{A`{bn}}}}10````````{{AjAlhAjhAj}{{Ad{An}}}}{{B`hAj}{{Ad{An}}}}{{Ajh}{{Ad{An}}}}{{AjAlAj}b}{{}h}{Ajb}{{AjAjB`Aj}An}{{BbAj}An}{BdAj}``````````{ce{}{}}0000000000000{c{{A`{Bf}}}Bh}{c{{A`{Bb}}}Bh}{c{{A`{Bj}}}Bh}{c{{A`{Bd}}}Bh}{c{{A`{Bl}}}Bh}{c{{A`{Bn}}}Bh}{c{{A`{C`}}}Bh}``{{BfCb}Cd}{{BbCb}Cd}{{BjCb}Cd}{{BdCb}Cd}{{BlCb}Cd}{{BnCb}Cd}{{C`Cb}Cd}{cc{}}000000``???????````{{Bfc}A`Cf}{{Bbc}A`Cf}{{Bjc}A`Cf}{{Bdc}A`Cf}{{Blc}A`Cf}{{Bnc}A`Cf}{{C`c}A`Cf}`{c{{A`{e}}}{}{}}0000000000000{cAh{}}000000```","c":[],"p":[[1,"unit"],[5,"Command",158],[6,"Commands",5],[1,"bool"],[5,"ArgMatches",159],[5,"Args",5],[8,"Error",160],[6,"Result",161],[5,"Id",162],[6,"Option",163],[1,"str"],[5,"TypeId",164],[5,"String",165],[1,"u8"],[1,"f64"],[1,"u64"],[5,"Post",67],[5,"Tags",67],[5,"Posts",67],[10,"Deserializer",166],[5,"File",67],[5,"Sample",67],[5,"Alternates",67],[5,"LowerQuality",67],[5,"Formatter",167],[8,"Result",167],[10,"Serializer",168],[15,"DownloadFavourites",49],[15,"GetPages",49],[15,"DownloadPosts",49],[15,"DownloadPost",49]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
